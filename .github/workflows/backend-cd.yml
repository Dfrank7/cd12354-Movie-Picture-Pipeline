name: Backend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: 
          pip install pipenv
          pip install flake8
        working-directory: ./starter/backend

      - name: Run linter
        run: pipenv run lint
        working-directory: ./starter/backend
 
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: 
          pip install pipenv
          pip install flake8
        working-directory: starter/backend

      - name: Run tests
        run: pipenv install pytest && pipenv run test
        working-directory: starter/backend

  build:
    runs-on: ubuntu-latest
    needs: [lint,test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
  

      - name: Login to Amazon 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        env:
          REPO_NAME: backend
          IMAGE_TAG: latest
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build --tag $REPO_NAME:$IMAGE_TAG .
          docker tag $REPO_NAME:$IMAGE_TAG $REGISTRY/$REPO_NAME:$IMAGE_TAG
          docker push $REGISTRY/$REPO_NAME:$IMAGE_TAG
        working-directory: ./starter/backend

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name movie-picture
    
      - name: Deploy to Kubernetes
        working-directory: ./starter/backend/k8s
        run: |
          kustomize edit set image backend=$REGISTRY/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -
