name: Frontend CD

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./starter/frontend

      - name: Run tests
        run: CI=true npm test
        working-directory: ./starter/frontend

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
  

      - name: Login to Amazon 
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install dependencies
        run: npm ci
        working-directory: ./starter/frontend

      - name: Build Docker image
        env:
          REPO_NAME: frontend
          IMAGE_TAG: latest
        run: |
          docker build --build-arg REACT_APP_MOVIE_API_URL=http://localhost:5000 -t 760216051599.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
          docker push 760216051599.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        working-directory: ./starter/frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name movie-pictures
    
      - name: Deploy to Kubernetes
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=760216051599.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
          kustomize build | kubectl apply -f -

      - name: Verify Deployment Status
        run: |
          if kubectl rollout status deployment/frontend -n default --timeout=2m | grep -q 'deployment "frontend" successfully rolled out'; then
            echo "Deployment succeeded."
          else
            echo "Deployment failed."
            exit 1
          fi